# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Minimal test'
        # Default value if no value is explicitly provided
        default: 'Some tag'
        # Input has to be provided for the workflow to run
        required: true

jobs:
  test:
    strategy:
      matrix:
#        os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest, ubuntu-latest, macos-latest]
#        python-version: [3.6, 3.7, 3.8]
#        python-version: [3.8]
        exclude:
          # excludes <py38 on Windows
          - python-version: 3.6
            os: windwows-latest
          - python-version: 3.7
            os: windwows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: |
          ~/Library/Caches/pypoetry/virtualenvs
          ~/Library/Caches/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      with:
        path: |
          $env:LocalAppdata/pypoetry/cache/virtualenvs
          $env:LocalAppdata/pypoetry/cache/
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-          
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry run pip install --upgrade pip
        poetry install
    - name: Run Checks
      run: |
        bash scripts/test.sh
    - name: Upload coverage to Codecov
      if: matrix.os == 'windows-latest' && matrix.python-version == '3.8'
      uses: codecov/codecov-action@v1
