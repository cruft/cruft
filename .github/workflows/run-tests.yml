name: Run tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: |
          ~/Library/Caches/pypoetry/virtualenvs
          ~/Library/Caches/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-poetry-pip-
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install
    - name: Run Checks
      run: |
        bash scripts/test.sh
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      uses: codecov/codecov-action@v1
